@model ArticleViewModel
@{
    ViewData["Title"] = "ReadArticle";
}


<div class="panel panel-primary">
    <div class="panel-heading text-center">
        <h2 style="overflow-wrap: break-word">@Model.article.Title</h2>
    </div>
    <div class="panel-body readMainImg">
        <div class="text-center">
            <img src="~/Images/@Model.article.DefaultImage" />
        </div>
        <hr />
            <div class="container-fluid">
                <p class="text-justify" style="white-space: pre-wrap;">
                    @Model.article.Text
                </p>
        </div>

    </div>

    <div class="panel-footer iconSize">
        <span> <b class="glyphicon glyphicon-comment"></b>&nbsp; @Model.article.Comments.Count &nbsp; &nbsp; &nbsp;</span>
        @if ((Model.article.UserID != Context.Session.GetInt32("ID")))//eğer article ın id si ile article a bakan kisinin useridsi aynıysa ona favorilere ekleme kapalı
        {
            if (Model.favouriteArticles.Liked == false)
            {
                //aynı id çok yerde verildi id sadece articlea ulaşmak için kullanılıyor.Id ile işlem yapılırsa compnentlerin çoğuna yapılan işlemi uygular.
                <span> <b id=@Model.article.ID style="font-size:20px" class="glyphicon glyphicon-heart-empty IncreaseLike"></b>&nbsp; @Model.article.NumOfLikes  &nbsp; &nbsp; &nbsp;</span>
            }
            else
            {
                <span> <b id=@Model.article.ID style="color:red; font-size:20px" class="glyphicon glyphicon-heart DecreaseLike"></b>&nbsp; @Model.article.NumOfLikes  &nbsp; &nbsp; &nbsp;</span>
            }


            if (Model.favouriteArticles.Favourite == false) //false ise article kişinin favorilerinde değildir
            {
                <button id=@Model.article.ID class="btn btn-info btn-xs AddFavourite">Add Favourite</button>
            }
            else
            {
                <button id=@Model.article.ID class="btn btn-danger btn-xs RemoveFavourite">Remove Favourite</button>
            }
            @:  &nbsp;

            <a asp-controller="Article" asp-action="ReportArticle" asp-route-articleID="@Model.article.ID" class="btn btn-danger btn-xs">Report Article</a>
        }
        else
        {
            @:  &nbsp;
            @*@Html.ActionLink("Delete Article", "DeleteArticle", "Article", new { articleID = Model.article.ID }, new { @class = "btn btn-danger btn-xs DeleteArticle", id = Model.article.ID })*@

            <button id=@Model.article.ID class="btn btn-danger btn-xs DeleteArticle">Delete Article</button>
        }
        @if (Model.admin == true)
        {
            @Html.ActionLink("Ban Article", "BanArticle", "Admin", new { articleID = Model.article.ID, cid = Model.complaintID }, new { @class = "btn btn-danger btn-xs" })

            @Html.Raw(TempData["msg"])
        }
        <div style="display:inline-block;text-align:center">
            &nbsp;&nbsp;&nbsp;
            @if (Model.article.BannedStatus == true)
            {
                <b style="font-size:20px;color:red" class="glyphicon glyphicon-exclamation-sign"> <label class="label label-danger">BANNED</label></b>
            }
        </div>
        <div class="pull-right">
            <a href="/Account/UserArticles/?id=@Model.article.User.ID" class="btn btn-warning btn-xs"><b>Writer: @Model.article.User.UserName</b></a>&nbsp;
            @*<a asp-controller="Account" asp-action="UserInformation" asp-route-id="@Model.article.User.ID" class="btn btn-warning btn-xs"><b>Writer: @Model.article.User.UserName</b></a>&nbsp;*@
            &nbsp;
            <a asp-controller="Article" asp-action="ArticleCategories" asp-route-id="@Model.article.CategoryID" class="btn btn-warning btn-xs"><b>Categori: @Model.article.Category.CategoriName</b></a>&nbsp;
        </div>
        <div class="clearfix"></div>
    </div>
</div>
@*<p style="color:red">
        favoriler remove add yapıldıkça yeniden eklenip siliniyor. LikedArticles tablosunda her tıklamada silip ekleyerek yeni id veriyor id nin ırzına geçiyor. oraya silindimi kolonu eklesem maliyeti ne olur? tutacağı yer mi önemli yoksa silinip yeniden eklendiğinde yeni id verilmesi mi?
        bir başkası çözerse ve sürekli tıklarsa veritabanını patlatabilir mi ?
    </p>*@
<label style="font-size:25px"> <span style="font-size:25px" class=" badge">  @Model.article.Comments.Count </span> Comments:</label>
@*<a href="#">Inbox <span class="badge">42</span></a>

    <button class="btn btn-primary" type="button">
      Messages <span class="badge">4</span>
    </button>*@



@foreach (var item in Model.article.Comments)
{

    <div class="panel panel-default">
        <div class="panel-heading">
            <p>
                <div>
                    <a href="/Account/UserArticles/?id=@item.UserID" style="text-decoration:none;">
                        <img src="~/Images/@item.User.ProfileImage" class="UserImage" alt="Alternate Text" />
                        <i class="label label-info"> by&nbsp;@item.User.UserName</i> 
                    </a> - @item.CommentDate
                </div>
                @*<a asp-controller="Account" asp-action="UserInformation" asp-route-id="@item.UserID" class="label label-info"> by&nbsp;@item.User.UserName</a>  - @item.CommentDate*@
            </p>
        </div>
        <div class="panel-body">
            <p>
                <span style="white-space:pre-line">@item.Text</span>
                @*@MvcHtmlString.Create(item.Text.Replace(Environment.NewLine, "<br />"))*@
            </p>
        </div>
        @if (Context.Session.GetInt32("ID") == item.UserID || Model.admin == true)
        {
            <div class="panel-footer">
                @*@Html.ActionLink("Delete Comment", "DeleteComment", "Article", new { id = item.ID }, new { @class = "btn btn-info btn-xs deleteComment", id = item.ID })*@

                <button id=@item.ID class="btn btn-danger btn-xs deleteComment">Delete Comment</button>
            </div>
        }
    </div>
}

<div class="panel panel-primary">
    <div class="panel-heading">
        Add Comments
    </div>
    <div class="panel-body">
        <textarea id="txtComment" class="form-control" style="resize:none" rows="6"></textarea>

    </div>

    <div class="panel-footer">
        @*@Html.ActionLink("Add Comment", "AddComment", "Article", new { articleID = Model.article.ID, userID = Convert.ToInt32(Session["ID"]) }, new { @class = "btn btn-warning pull-right" })*@
        <button id=@Model.article.ID class="btn btn-warning pull-right addComment">Add Comment</button>
        <div class="clearfix"></div>
    </div>
</div>


<br /><br />
<br /><br />
<br /><br />
<br /><br />
<br /><br />
<br /><br />
<br /><br />
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/jquery-confirm.min.css" />
<script type="text/javascript" src="~/Scripts/jquery-confirm.min.js"></script>
<script>
    $(document).ready(function () {
        $(".DeleteArticle").click(function () {
            var articleid = $(this).attr('id');
            $.confirm({
                    theme: 'light',
                    boxWidth: '30%',
                    title: '',
                    content: 'Are you sure to delete this article?',
                    buttons: {
                        Yes: {
                            text: 'Yes',
                            keys: ['enter', 'shift'],
                            action: function () {
                                $.ajax({
                                    type: "POST",
                                    url: '@Url.Action("DeleteArticle", "Article")',
                                    data: { articleID: articleid },
                                    success: function (data) {
                                        if (data.success) {
                                            window.location.href = "/Article/UserArticles";
                                        }
                                    }
                                });
                            }
                        },
                        No: function () {
                        }
                    }
                });
        });

        $(".AddFavourite").click(function () {
            var blgID = $(this).attr('id');
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddFavourite", "Article")',
                data: { articleID: blgID },
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        window.location.reload();
                    } else {
                        $.alert({
                            title: 'Alert',
                            content: response.text,
                        });
                    }
                }
            });
        });
         $(".RemoveFavourite").click(function () {
            var blgID = $(this).attr('id');
            $.ajax({
                type: "POST",
                url: '@Url.Action("RemoveFavourite", "Article")',
                data: { articleID: blgID },
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        window.location.reload();
                    } else {
                        $.alert({
                            title: 'Alert',
                            content: response.text,
                        });
                    }
                }
            });
        });
        $(".IncreaseLike").click(function () {
            var blgID = $(this).attr('id');
            $.ajax({
                type: "POST",
                url: '@Url.Action("IncreaseLike", "Article")',
                data: { articleID: blgID },
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        window.location.reload();
                    } else {
                        $.alert({
                            title: 'Alert',
                            content: response.text,
                        });
                    }
                }
            });
        });

        $(".DecreaseLike").click(function () {
            var blgID = $(this).attr('id');
            $.ajax({
                type: "POST",
                url: '@Url.Action("DecreaseLike", "Article")',
                data: { articleID: blgID },
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        window.location.reload();
                    } else {
                        $.alert({
                            title: 'Alert',
                            content: response.text,
                        });
                    }
                }
            });
        });



        $(".addComment").click(function () {
            var blgID = $(this).attr('id');
            var txt = $("#txtComment").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddComment", "Article")',
                data: { articleID:blgID, articleText:txt },
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        window.location.reload();
                    } else {

                        $.alert({
                            title: 'Alert',
                            content: response.text,
                        });
                    }
                },
                error: function (response) {
                    $.alert({
                        title: 'Alert',
                        content: "eror",
                    });
                }
            });

        });


        $(".deleteComment").click(function () {
                var deletedID = $(this).attr('id');

                $.confirm({
                    theme: 'light',
                    boxWidth: '30%',
                    title: '',
                    content: 'Are you sure to delete this comment?',
                    buttons: {
                        Yes: {
                            text: 'Yes',
                            keys: ['enter', 'shift'],
                            action: function () {

                                $.ajax({
                                    type: "POST",
                                    url: '@Url.Action("DeleteComment", "Article")',
                                    data: { id: deletedID },
                                    success: function (data) {
                                        window.location.reload();
                                    }
                                });
                            }
                        },
                        No: function () {
                        }
                    }
                });
            });
    });
</script>